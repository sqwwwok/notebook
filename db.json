{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1737624250637},{"_id":"source/_drafts/BlockChain-notes/Introduction.md","hash":"3daab147bdaff38adf95cdee541b2232b5e771cd","modified":1737855021379},{"_id":"source/_drafts/C-notes/#include directive.md","hash":"3f3a84188ab9170609d61d47b7ac9db4cd80499b","modified":1737612715087},{"_id":"source/_drafts/C-notes/Pointer and array.md","hash":"ddbba49a1063d37fa7347382018cd51d16e3aa8f","modified":1737612715087},{"_id":"source/_drafts/C-notes/Reassignment by existing pointer.md","hash":"397267f02dfe102b662f40ce1c7b65684f2f78be","modified":1737612715087},{"_id":"source/_drafts/Javascript-notes/Confusions about parseInt.md","hash":"bf2dcff282390081c72f2439c5a7bdade0aa41e4","modified":1737612715087},{"_id":"source/_drafts/React-notes/Render components using Context partially.md","hash":"b3fd84cdf7c2bfd216a63c087d1d167965ca0980","modified":1737612715087},{"_id":"source/_drafts/tips/不要盲目复用代码.md","hash":"6fb8b177c0861579c3e5ddba048eed2e4fb124bd","modified":1737612715087},{"_id":"source/_drafts/solutions/Automate ssh login.md","hash":"1e56887633e1e5fbd8a5356d79f50994fa97c455","modified":1737612715087},{"_id":"source/_drafts/solutions/Flatten the nested directory.md","hash":"61f778ef06bcd38b6a3b862b109ec80f14ab6f07","modified":1737612715087},{"_id":"source/_drafts/solutions/Merge unrelated branches.md","hash":"7d95e464a9a550323ef0d218f6df7dd7db824bdd","modified":1737612715087},{"_id":"source/_drafts/solutions/Replace logical AND with ternary operator.md","hash":"02afeb0b21506209bf373a773aa6738cc2561f4c","modified":1737613609077},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1737624196582},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1737624196582},{"_id":"public/2025/01/23/hello-world/index.html","hash":"8bd18d6441991d12ae2955e2465e981e1c6df4a3","modified":1737855545201},{"_id":"public/archives/index.html","hash":"5143eb26532848e46333e13a7b999024aa174dc2","modified":1737855545201},{"_id":"public/archives/2025/index.html","hash":"79b6b73105ff53eca0ae8d8c055ea89a51ab76bb","modified":1737855545201},{"_id":"public/archives/2025/01/index.html","hash":"b30819000b9830b93f6f04f6f071a8277ee577af","modified":1737855545201},{"_id":"public/index.html","hash":"f1b4144c857f06c922083d11d1aa173b9d0d4aa4","modified":1737855545201},{"_id":"public/css/style.css","hash":"ddb3792605d744ab3d9f0a649c82b62e9b16daa6","modified":1737855545201},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1737855545201},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1737855545201},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1737855545201},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1737855545201},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1737855545201}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2025-01-23T09:24:10.637Z","updated":"2025-01-23T09:24:10.637Z","comments":1,"layout":"post","photos":[],"_id":"cm6cy9w440000k8uibqzd1say","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"_content":"```c\n#include <stdio.h>\n#include \"utils/print_num.h\"\n```\n\nLine1 `#include <>` is for standard source file, which is implemented offically in the C/C++ libraries.\nLine2 `#include \"\"` is for custom source file, for which the complier will search in the directory of current file.\n\nAnyway, the contents of `.h` file will be joined directly in the header of the current file. \n\n","source":"_drafts/C-notes/#include directive.md","raw":"```c\n#include <stdio.h>\n#include \"utils/print_num.h\"\n```\n\nLine1 `#include <>` is for standard source file, which is implemented offically in the C/C++ libraries.\nLine2 `#include \"\"` is for custom source file, for which the complier will search in the directory of current file.\n\nAnyway, the contents of `.h` file will be joined directly in the header of the current file. \n\n","slug":"C-notes/#include directive","published":0,"date":"2025-01-23T06:11:55.087Z","updated":"2025-01-23T06:11:55.087Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm6cy9w480001k8ui4k6r8d21","content":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;utils/print_num.h&quot;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>Line1 <code>#include &lt;&gt;</code> is for standard source file, which is implemented offically in the C&#x2F;C++ libraries.<br>Line2 <code>#include &quot;&quot;</code> is for custom source file, for which the complier will search in the directory of current file.</p>\n<p>Anyway, the contents of <code>.h</code> file will be joined directly in the header of the current file. </p>\n","excerpt":"","more":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;utils/print_num.h&quot;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>Line1 <code>#include &lt;&gt;</code> is for standard source file, which is implemented offically in the C&#x2F;C++ libraries.<br>Line2 <code>#include &quot;&quot;</code> is for custom source file, for which the complier will search in the directory of current file.</p>\n<p>Anyway, the contents of <code>.h</code> file will be joined directly in the header of the current file. </p>\n"},{"_content":"```c\n#include <stdio.h>\n\nint main () {\n  int arr[] = {100, 101};\n}\n```\n\nArray is the pointer to the first element of array. With line2, `array+1` can be used to acess next element.\n```c\nprintf(\"%p | %d\\n\", arr, *arr);\nprintf(\"%p | %d\\n\", arr, *(arr+1));\n```\n\nBut array can not be changed, which is different from the pointer.\n```c\n// arr++;\n// The code above will cause a complier error.\n\nint* ptr = arr;\nptr++;\nprintf(\"%p | %d\\n\", ptr, *(ptr));\n```\n","source":"_drafts/C-notes/Pointer and array.md","raw":"```c\n#include <stdio.h>\n\nint main () {\n  int arr[] = {100, 101};\n}\n```\n\nArray is the pointer to the first element of array. With line2, `array+1` can be used to acess next element.\n```c\nprintf(\"%p | %d\\n\", arr, *arr);\nprintf(\"%p | %d\\n\", arr, *(arr+1));\n```\n\nBut array can not be changed, which is different from the pointer.\n```c\n// arr++;\n// The code above will cause a complier error.\n\nint* ptr = arr;\nptr++;\nprintf(\"%p | %d\\n\", ptr, *(ptr));\n```\n","slug":"C-notes/Pointer and array","published":0,"date":"2025-01-23T06:11:55.087Z","updated":"2025-01-23T06:11:55.087Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm6cy9w490002k8ui02072y7h","content":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> arr[] = &#123;<span class=\"number\">100</span>, <span class=\"number\">101</span>&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Array is the pointer to the first element of array. With line2, <code>array+1</code> can be used to acess next element.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p | %d\\n&quot;</span>, arr, *arr);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p | %d\\n&quot;</span>, arr, *(arr+<span class=\"number\">1</span>));</span><br></pre></td></tr></table></figure>\n\n<p>But array can not be changed, which is different from the pointer.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// arr++;</span></span><br><span class=\"line\"><span class=\"comment\">// The code above will cause a complier error.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span>* ptr = arr;</span><br><span class=\"line\">ptr++;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p | %d\\n&quot;</span>, ptr, *(ptr));</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> arr[] = &#123;<span class=\"number\">100</span>, <span class=\"number\">101</span>&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Array is the pointer to the first element of array. With line2, <code>array+1</code> can be used to acess next element.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p | %d\\n&quot;</span>, arr, *arr);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p | %d\\n&quot;</span>, arr, *(arr+<span class=\"number\">1</span>));</span><br></pre></td></tr></table></figure>\n\n<p>But array can not be changed, which is different from the pointer.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// arr++;</span></span><br><span class=\"line\"><span class=\"comment\">// The code above will cause a complier error.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span>* ptr = arr;</span><br><span class=\"line\">ptr++;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p | %d\\n&quot;</span>, ptr, *(ptr));</span><br></pre></td></tr></table></figure>\n"},{"_content":"Assign the value of existing pointer to a new varriable, whose pointer will be different from the original one.\n```c\n#include <stdio.h>\n\ntypedef struct Book {\n  char name[20];\n} Book;\n\nint main() {\n  Book book = {\n    \"aaa\",\n    \"What this guy\",\n    100\n  };\n  Book* book_ptr = &book;\n  // reassign, the pointer will be different\n  Book book_1 = *book_ptr;\n  printf(\"%p | %p\\n\", (&book_1), book_ptr);\n  // 0x16b9c73f0 | 0x16b9c741c\n\n\n\n  int i = 0;\n  int* i_ptr = &i;\n  int j = *i_ptr;\n  printf(\"%p | %p\\n\", (&j), i_ptr);\n  // 0x16b9c73cc | 0x16b9c73dc\n\n  return 0;\n}\n```\nIt seems that the complier assign a new piece of mermory for the new varriable, so it has a different pointer.\n","source":"_drafts/C-notes/Reassignment by existing pointer.md","raw":"Assign the value of existing pointer to a new varriable, whose pointer will be different from the original one.\n```c\n#include <stdio.h>\n\ntypedef struct Book {\n  char name[20];\n} Book;\n\nint main() {\n  Book book = {\n    \"aaa\",\n    \"What this guy\",\n    100\n  };\n  Book* book_ptr = &book;\n  // reassign, the pointer will be different\n  Book book_1 = *book_ptr;\n  printf(\"%p | %p\\n\", (&book_1), book_ptr);\n  // 0x16b9c73f0 | 0x16b9c741c\n\n\n\n  int i = 0;\n  int* i_ptr = &i;\n  int j = *i_ptr;\n  printf(\"%p | %p\\n\", (&j), i_ptr);\n  // 0x16b9c73cc | 0x16b9c73dc\n\n  return 0;\n}\n```\nIt seems that the complier assign a new piece of mermory for the new varriable, so it has a different pointer.\n","slug":"C-notes/Reassignment by existing pointer","published":0,"date":"2025-01-23T06:11:55.087Z","updated":"2025-01-23T06:11:55.087Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm6cy9w4a0003k8ui66lg65p7","content":"<p>Assign the value of existing pointer to a new varriable, whose pointer will be different from the original one.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Book</span> &#123;</span></span><br><span class=\"line\">  <span class=\"type\">char</span> name[<span class=\"number\">20</span>];</span><br><span class=\"line\">&#125; Book;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  Book book = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;aaa&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;What this guy&quot;</span>,</span><br><span class=\"line\">    <span class=\"number\">100</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  Book* book_ptr = &amp;book;</span><br><span class=\"line\">  <span class=\"comment\">// reassign, the pointer will be different</span></span><br><span class=\"line\">  Book book_1 = *book_ptr;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p | %p\\n&quot;</span>, (&amp;book_1), book_ptr);</span><br><span class=\"line\">  <span class=\"comment\">// 0x16b9c73f0 | 0x16b9c741c</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"type\">int</span>* i_ptr = &amp;i;</span><br><span class=\"line\">  <span class=\"type\">int</span> j = *i_ptr;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p | %p\\n&quot;</span>, (&amp;j), i_ptr);</span><br><span class=\"line\">  <span class=\"comment\">// 0x16b9c73cc | 0x16b9c73dc</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>It seems that the complier assign a new piece of mermory for the new varriable, so it has a different pointer.</p>\n","excerpt":"","more":"<p>Assign the value of existing pointer to a new varriable, whose pointer will be different from the original one.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Book</span> &#123;</span></span><br><span class=\"line\">  <span class=\"type\">char</span> name[<span class=\"number\">20</span>];</span><br><span class=\"line\">&#125; Book;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  Book book = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;aaa&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;What this guy&quot;</span>,</span><br><span class=\"line\">    <span class=\"number\">100</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  Book* book_ptr = &amp;book;</span><br><span class=\"line\">  <span class=\"comment\">// reassign, the pointer will be different</span></span><br><span class=\"line\">  Book book_1 = *book_ptr;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p | %p\\n&quot;</span>, (&amp;book_1), book_ptr);</span><br><span class=\"line\">  <span class=\"comment\">// 0x16b9c73f0 | 0x16b9c741c</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"type\">int</span>* i_ptr = &amp;i;</span><br><span class=\"line\">  <span class=\"type\">int</span> j = *i_ptr;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p | %p\\n&quot;</span>, (&amp;j), i_ptr);</span><br><span class=\"line\">  <span class=\"comment\">// 0x16b9c73cc | 0x16b9c73dc</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>It seems that the complier assign a new piece of mermory for the new varriable, so it has a different pointer.</p>\n"},{"_content":"## Backgrounds\n\n```js\nparseInt(0.0000005)\n// 5\n```\n\n## Explanations\n\n​\t`parseInt` accepts string as the first argument, represents the value to parse. If this argument is not a string, then it is converted to one using the `ToString` abstract operation.\n\n​\tIn JavaScript, the number which has more than 6 zeros in front of the first non-zero digit will be displayed in scientific notation, specified by [ECMA ](https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-numeric-types-number-tostring). That means , `0.00000005.toString() `will return `'5e-7'`\n\n​\tSo, the code above can be explained as following:\n\n```js\n0.0000005.toString()\n// '5e-7'\n\nparseInt(5e-7)\n// 5\nparseInt('5e-7')\n// 5\n```\n\n## Extra\n\nWhat about postive numbers ?\n\n```js\nparseInt(5e7)\nparseInt(50000000)\n// both return 50000000\n\n// 5e7 will not be displayed in scientific notation\n5e7.toString()\n// '50000000'\n\n// '5e6' is string\nparseInt('5e6')\n// 5\n```\n\n## Tips\n\n`parseInt` should *not* be used as a substitute for `Math.floor()`","source":"_drafts/Javascript-notes/Confusions about parseInt.md","raw":"## Backgrounds\n\n```js\nparseInt(0.0000005)\n// 5\n```\n\n## Explanations\n\n​\t`parseInt` accepts string as the first argument, represents the value to parse. If this argument is not a string, then it is converted to one using the `ToString` abstract operation.\n\n​\tIn JavaScript, the number which has more than 6 zeros in front of the first non-zero digit will be displayed in scientific notation, specified by [ECMA ](https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-numeric-types-number-tostring). That means , `0.00000005.toString() `will return `'5e-7'`\n\n​\tSo, the code above can be explained as following:\n\n```js\n0.0000005.toString()\n// '5e-7'\n\nparseInt(5e-7)\n// 5\nparseInt('5e-7')\n// 5\n```\n\n## Extra\n\nWhat about postive numbers ?\n\n```js\nparseInt(5e7)\nparseInt(50000000)\n// both return 50000000\n\n// 5e7 will not be displayed in scientific notation\n5e7.toString()\n// '50000000'\n\n// '5e6' is string\nparseInt('5e6')\n// 5\n```\n\n## Tips\n\n`parseInt` should *not* be used as a substitute for `Math.floor()`","slug":"Javascript-notes/Confusions about parseInt","published":0,"date":"2025-01-23T06:11:55.087Z","updated":"2025-01-23T06:11:55.087Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm6cy9w4a0004k8ui7pata88q","content":"<h2 id=\"Backgrounds\"><a href=\"#Backgrounds\" class=\"headerlink\" title=\"Backgrounds\"></a>Backgrounds</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"number\">0.0000005</span>)</span><br><span class=\"line\"><span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Explanations\"><a href=\"#Explanations\" class=\"headerlink\" title=\"Explanations\"></a>Explanations</h2><p>​\t<code>parseInt</code> accepts string as the first argument, represents the value to parse. If this argument is not a string, then it is converted to one using the <code>ToString</code> abstract operation.</p>\n<p>​\tIn JavaScript, the number which has more than 6 zeros in front of the first non-zero digit will be displayed in scientific notation, specified by <a href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-numeric-types-number-tostring\">ECMA </a>. That means , <code>0.00000005.toString() </code>will return <code>&#39;5e-7&#39;</code></p>\n<p>​\tSo, the code above can be explained as following:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0.0000005</span>.<span class=\"title function_\">toString</span>()</span><br><span class=\"line\"><span class=\"comment\">// &#x27;5e-7&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"number\">5e-7</span>)</span><br><span class=\"line\"><span class=\"comment\">// 5</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&#x27;5e-7&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Extra\"><a href=\"#Extra\" class=\"headerlink\" title=\"Extra\"></a>Extra</h2><p>What about postive numbers ?</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"number\">5e7</span>)</span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"number\">50000000</span>)</span><br><span class=\"line\"><span class=\"comment\">// both return 50000000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 5e7 will not be displayed in scientific notation</span></span><br><span class=\"line\"><span class=\"number\">5e7</span>.<span class=\"title function_\">toString</span>()</span><br><span class=\"line\"><span class=\"comment\">// &#x27;50000000&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// &#x27;5e6&#x27; is string</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&#x27;5e6&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips\"></a>Tips</h2><p><code>parseInt</code> should <em>not</em> be used as a substitute for <code>Math.floor()</code></p>\n","excerpt":"","more":"<h2 id=\"Backgrounds\"><a href=\"#Backgrounds\" class=\"headerlink\" title=\"Backgrounds\"></a>Backgrounds</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"number\">0.0000005</span>)</span><br><span class=\"line\"><span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Explanations\"><a href=\"#Explanations\" class=\"headerlink\" title=\"Explanations\"></a>Explanations</h2><p>​\t<code>parseInt</code> accepts string as the first argument, represents the value to parse. If this argument is not a string, then it is converted to one using the <code>ToString</code> abstract operation.</p>\n<p>​\tIn JavaScript, the number which has more than 6 zeros in front of the first non-zero digit will be displayed in scientific notation, specified by <a href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-numeric-types-number-tostring\">ECMA </a>. That means , <code>0.00000005.toString() </code>will return <code>&#39;5e-7&#39;</code></p>\n<p>​\tSo, the code above can be explained as following:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0.0000005</span>.<span class=\"title function_\">toString</span>()</span><br><span class=\"line\"><span class=\"comment\">// &#x27;5e-7&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"number\">5e-7</span>)</span><br><span class=\"line\"><span class=\"comment\">// 5</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&#x27;5e-7&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Extra\"><a href=\"#Extra\" class=\"headerlink\" title=\"Extra\"></a>Extra</h2><p>What about postive numbers ?</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"number\">5e7</span>)</span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"number\">50000000</span>)</span><br><span class=\"line\"><span class=\"comment\">// both return 50000000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 5e7 will not be displayed in scientific notation</span></span><br><span class=\"line\"><span class=\"number\">5e7</span>.<span class=\"title function_\">toString</span>()</span><br><span class=\"line\"><span class=\"comment\">// &#x27;50000000&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// &#x27;5e6&#x27; is string</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">&#x27;5e6&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips\"></a>Tips</h2><p><code>parseInt</code> should <em>not</em> be used as a substitute for <code>Math.floor()</code></p>\n"},{"_content":"# unstabled_observedBits in React Context API\n\n[reference](https://zhuanlan.zhihu.com/p/51073183)\n\n```jsx\nimport React, { useContext, createContext, useState } from \"react\";\n\nconst ThemeColorChangedBits = 0b10;\nconst ThemeCountChangedBits = 0b01;\n\nconst Context = createContext(null, (prev, next) => {\n  let result = 0;\n  if (prev.theme !== next.theme) {\n    result |= ThemeColorChangedBits;\n  }\n  if (prev.count !== next.count) {\n    result |= ThemeCountChangedBits;\n  }\n  console.log(\"calculatedBits \", result);\n  return result;\n});\n\nconst redTheme = {\n  color: \"red\"\n};\n\nconst greenTheme = {\n  color: \"green\"\n};\n\n\nfunction Content() {\n  console.log(\"render Content\");\n  const { theme, switchTheme } = useContext(Context, ThemeColorChangedBits);\n  //const { theme, switchTheme } = useContext(Context);\n\n  return (\n    <>\n      <h1 style={theme}>Hello world</h1>\n      <button onClick={() => switchTheme(redTheme)}>Red Theme</button>\n      <button onClick={() => switchTheme(greenTheme)}>Green Theme</button>\n    </>\n  );\n}\n\nfunction Counter() {\n  console.log(\"render Counter\");\n  const { count, increment } = useContext(Context, ThemeCountChangedBits);\n  //const { count, increment } = useContext(Context);\n\n  return (\n    <>\n      <h1>{count}</h1>\n      <button onClick={() => increment()}>+</button>\n    </>\n  );\n}\n\nfunction Header() {\n  //console.log(\"render Header\");\n  return <h1>Hello CodeSandbox</h1>;\n}\n\n\nfunction ThemeProvider ({children}) {\n  const [theme, setTheme] = useState(redTheme)\n  const [count, setCount] = useState(0)\n\n  function switchTheme(theme) {\n    setTheme(theme)\n  }\n\n  function increment() {\n    setCount(count+1)\n  }\n\n  // 注意不要直接把Content的消费者直接写进子组件，不然setState后所有子组件都会重新渲染\n  // <Context.Provider\n  //   value={{\n  //     theme: theme,\n  //     count: count,\n  //     switchTheme: switchTheme,\n  //     increment: increment\n  //   }}\n  // >\n  //   <div className=\"App\">\n  //     <Header />\n  //     <Content />\n  //     <Counter />\n  //   </div>\n  // </Context.Provider>\n\n  return (\n    <Context.Provider\n      value={{\n        theme: theme,\n        count: count,\n        switchTheme: switchTheme,\n        increment: increment\n      }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n\nfunction App() {\n  //console.log(\"render App\");\n  return (\n    <ThemeProvider>\n      <div className=\"App\">\n        <Header />\n        <Content />\n        <Counter />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n```\n","source":"_drafts/React-notes/Render components using Context partially.md","raw":"# unstabled_observedBits in React Context API\n\n[reference](https://zhuanlan.zhihu.com/p/51073183)\n\n```jsx\nimport React, { useContext, createContext, useState } from \"react\";\n\nconst ThemeColorChangedBits = 0b10;\nconst ThemeCountChangedBits = 0b01;\n\nconst Context = createContext(null, (prev, next) => {\n  let result = 0;\n  if (prev.theme !== next.theme) {\n    result |= ThemeColorChangedBits;\n  }\n  if (prev.count !== next.count) {\n    result |= ThemeCountChangedBits;\n  }\n  console.log(\"calculatedBits \", result);\n  return result;\n});\n\nconst redTheme = {\n  color: \"red\"\n};\n\nconst greenTheme = {\n  color: \"green\"\n};\n\n\nfunction Content() {\n  console.log(\"render Content\");\n  const { theme, switchTheme } = useContext(Context, ThemeColorChangedBits);\n  //const { theme, switchTheme } = useContext(Context);\n\n  return (\n    <>\n      <h1 style={theme}>Hello world</h1>\n      <button onClick={() => switchTheme(redTheme)}>Red Theme</button>\n      <button onClick={() => switchTheme(greenTheme)}>Green Theme</button>\n    </>\n  );\n}\n\nfunction Counter() {\n  console.log(\"render Counter\");\n  const { count, increment } = useContext(Context, ThemeCountChangedBits);\n  //const { count, increment } = useContext(Context);\n\n  return (\n    <>\n      <h1>{count}</h1>\n      <button onClick={() => increment()}>+</button>\n    </>\n  );\n}\n\nfunction Header() {\n  //console.log(\"render Header\");\n  return <h1>Hello CodeSandbox</h1>;\n}\n\n\nfunction ThemeProvider ({children}) {\n  const [theme, setTheme] = useState(redTheme)\n  const [count, setCount] = useState(0)\n\n  function switchTheme(theme) {\n    setTheme(theme)\n  }\n\n  function increment() {\n    setCount(count+1)\n  }\n\n  // 注意不要直接把Content的消费者直接写进子组件，不然setState后所有子组件都会重新渲染\n  // <Context.Provider\n  //   value={{\n  //     theme: theme,\n  //     count: count,\n  //     switchTheme: switchTheme,\n  //     increment: increment\n  //   }}\n  // >\n  //   <div className=\"App\">\n  //     <Header />\n  //     <Content />\n  //     <Counter />\n  //   </div>\n  // </Context.Provider>\n\n  return (\n    <Context.Provider\n      value={{\n        theme: theme,\n        count: count,\n        switchTheme: switchTheme,\n        increment: increment\n      }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n\nfunction App() {\n  //console.log(\"render App\");\n  return (\n    <ThemeProvider>\n      <div className=\"App\">\n        <Header />\n        <Content />\n        <Counter />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n```\n","slug":"React-notes/Render components using Context partially","published":0,"date":"2025-01-23T06:11:55.087Z","updated":"2025-01-23T06:11:55.087Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm6cy9w4b0005k8ui39bu5ilj","content":"<h1 id=\"unstabled-observedBits-in-React-Context-API\"><a href=\"#unstabled-observedBits-in-React-Context-API\" class=\"headerlink\" title=\"unstabled_observedBits in React Context API\"></a>unstabled_observedBits in React Context API</h1><p><a href=\"https://zhuanlan.zhihu.com/p/51073183\">reference</a></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; useContext, createContext, useState &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">ThemeColorChangedBits</span> = <span class=\"number\">0b10</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">ThemeCountChangedBits</span> = <span class=\"number\">0b01</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Context</span> = <span class=\"title function_\">createContext</span>(<span class=\"literal\">null</span>, <span class=\"function\">(<span class=\"params\">prev, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (prev.<span class=\"property\">theme</span> !== next.<span class=\"property\">theme</span>) &#123;</span><br><span class=\"line\">    result |= <span class=\"title class_\">ThemeColorChangedBits</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (prev.<span class=\"property\">count</span> !== next.<span class=\"property\">count</span>) &#123;</span><br><span class=\"line\">    result |= <span class=\"title class_\">ThemeCountChangedBits</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;calculatedBits &quot;</span>, result);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> redTheme = &#123;</span><br><span class=\"line\">  <span class=\"attr\">color</span>: <span class=\"string\">&quot;red&quot;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> greenTheme = &#123;</span><br><span class=\"line\">  <span class=\"attr\">color</span>: <span class=\"string\">&quot;green&quot;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Content</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;render Content&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; theme, switchTheme &#125; = <span class=\"title function_\">useContext</span>(<span class=\"title class_\">Context</span>, <span class=\"title class_\">ThemeColorChangedBits</span>);</span><br><span class=\"line\">  <span class=\"comment\">//const &#123; theme, switchTheme &#125; = useContext(Context);</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">style</span>=<span class=\"string\">&#123;theme&#125;</span>&gt;</span>Hello world<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> switchTheme(redTheme)&#125;&gt;Red Theme<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> switchTheme(greenTheme)&#125;&gt;Green Theme<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Counter</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;render Counter&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; count, increment &#125; = <span class=\"title function_\">useContext</span>(<span class=\"title class_\">Context</span>, <span class=\"title class_\">ThemeCountChangedBits</span>);</span><br><span class=\"line\">  <span class=\"comment\">//const &#123; count, increment &#125; = useContext(Context);</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> increment()&#125;&gt;+<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Header</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//console.log(&quot;render Header&quot;);</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello CodeSandbox<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ThemeProvider</span> (<span class=\"params\">&#123;children&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [theme, setTheme] = <span class=\"title function_\">useState</span>(redTheme)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">switchTheme</span>(<span class=\"params\">theme</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setTheme</span>(theme)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">increment</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setCount</span>(count+<span class=\"number\">1</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 注意不要直接把Content的消费者直接写进子组件，不然setState后所有子组件都会重新渲染</span></span><br><span class=\"line\">  <span class=\"comment\">// &lt;Context.Provider</span></span><br><span class=\"line\">  <span class=\"comment\">//   value=&#123;&#123;</span></span><br><span class=\"line\">  <span class=\"comment\">//     theme: theme,</span></span><br><span class=\"line\">  <span class=\"comment\">//     count: count,</span></span><br><span class=\"line\">  <span class=\"comment\">//     switchTheme: switchTheme,</span></span><br><span class=\"line\">  <span class=\"comment\">//     increment: increment</span></span><br><span class=\"line\">  <span class=\"comment\">//   &#125;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">// &gt;</span></span><br><span class=\"line\">  <span class=\"comment\">//   &lt;div className=&quot;App&quot;&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">//     &lt;Header /&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">//     &lt;Content /&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">//     &lt;Counter /&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">//   &lt;/div&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">// &lt;/Context.Provider&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Context.Provider</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">value</span>=<span class=\"string\">&#123;&#123;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        <span class=\"attr\">theme:</span> <span class=\"attr\">theme</span>,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        <span class=\"attr\">count:</span> <span class=\"attr\">count</span>,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        <span class=\"attr\">switchTheme:</span> <span class=\"attr\">switchTheme</span>,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        <span class=\"attr\">increment:</span> <span class=\"attr\">increment</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      &#125;&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">    &gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;children&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Context.Provider</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//console.log(&quot;render App&quot;);</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeProvider</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;App&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Header</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Content</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Counter</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">ThemeProvider</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"unstabled-observedBits-in-React-Context-API\"><a href=\"#unstabled-observedBits-in-React-Context-API\" class=\"headerlink\" title=\"unstabled_observedBits in React Context API\"></a>unstabled_observedBits in React Context API</h1><p><a href=\"https://zhuanlan.zhihu.com/p/51073183\">reference</a></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; useContext, createContext, useState &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">ThemeColorChangedBits</span> = <span class=\"number\">0b10</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">ThemeCountChangedBits</span> = <span class=\"number\">0b01</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Context</span> = <span class=\"title function_\">createContext</span>(<span class=\"literal\">null</span>, <span class=\"function\">(<span class=\"params\">prev, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (prev.<span class=\"property\">theme</span> !== next.<span class=\"property\">theme</span>) &#123;</span><br><span class=\"line\">    result |= <span class=\"title class_\">ThemeColorChangedBits</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (prev.<span class=\"property\">count</span> !== next.<span class=\"property\">count</span>) &#123;</span><br><span class=\"line\">    result |= <span class=\"title class_\">ThemeCountChangedBits</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;calculatedBits &quot;</span>, result);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> redTheme = &#123;</span><br><span class=\"line\">  <span class=\"attr\">color</span>: <span class=\"string\">&quot;red&quot;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> greenTheme = &#123;</span><br><span class=\"line\">  <span class=\"attr\">color</span>: <span class=\"string\">&quot;green&quot;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Content</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;render Content&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; theme, switchTheme &#125; = <span class=\"title function_\">useContext</span>(<span class=\"title class_\">Context</span>, <span class=\"title class_\">ThemeColorChangedBits</span>);</span><br><span class=\"line\">  <span class=\"comment\">//const &#123; theme, switchTheme &#125; = useContext(Context);</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">style</span>=<span class=\"string\">&#123;theme&#125;</span>&gt;</span>Hello world<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> switchTheme(redTheme)&#125;&gt;Red Theme<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> switchTheme(greenTheme)&#125;&gt;Green Theme<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Counter</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;render Counter&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; count, increment &#125; = <span class=\"title function_\">useContext</span>(<span class=\"title class_\">Context</span>, <span class=\"title class_\">ThemeCountChangedBits</span>);</span><br><span class=\"line\">  <span class=\"comment\">//const &#123; count, increment &#125; = useContext(Context);</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;count&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> increment()&#125;&gt;+<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Header</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//console.log(&quot;render Header&quot;);</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello CodeSandbox<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ThemeProvider</span> (<span class=\"params\">&#123;children&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [theme, setTheme] = <span class=\"title function_\">useState</span>(redTheme)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">switchTheme</span>(<span class=\"params\">theme</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setTheme</span>(theme)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">increment</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setCount</span>(count+<span class=\"number\">1</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 注意不要直接把Content的消费者直接写进子组件，不然setState后所有子组件都会重新渲染</span></span><br><span class=\"line\">  <span class=\"comment\">// &lt;Context.Provider</span></span><br><span class=\"line\">  <span class=\"comment\">//   value=&#123;&#123;</span></span><br><span class=\"line\">  <span class=\"comment\">//     theme: theme,</span></span><br><span class=\"line\">  <span class=\"comment\">//     count: count,</span></span><br><span class=\"line\">  <span class=\"comment\">//     switchTheme: switchTheme,</span></span><br><span class=\"line\">  <span class=\"comment\">//     increment: increment</span></span><br><span class=\"line\">  <span class=\"comment\">//   &#125;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">// &gt;</span></span><br><span class=\"line\">  <span class=\"comment\">//   &lt;div className=&quot;App&quot;&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">//     &lt;Header /&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">//     &lt;Content /&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">//     &lt;Counter /&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">//   &lt;/div&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">// &lt;/Context.Provider&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Context.Provider</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      <span class=\"attr\">value</span>=<span class=\"string\">&#123;&#123;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        <span class=\"attr\">theme:</span> <span class=\"attr\">theme</span>,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        <span class=\"attr\">count:</span> <span class=\"attr\">count</span>,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        <span class=\"attr\">switchTheme:</span> <span class=\"attr\">switchTheme</span>,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        <span class=\"attr\">increment:</span> <span class=\"attr\">increment</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">      &#125;&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">    &gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;children&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Context.Provider</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//console.log(&quot;render App&quot;);</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeProvider</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;App&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Header</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Content</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Counter</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">ThemeProvider</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n"},{"_content":"## 引言\n\n开发过程中经常会碰到相同的逻辑，一般为了代码的整洁性，都会进行复用。\n但是是不是所有相同的逻辑都需要复用呢？\n\n## 实际场景\n\n有两个商品卡片需要实现，其中一个是热点商品，一个是普通商品\n两个在长相上有一些区别，大概在30%左右\n热点商品多了标签，背景色，按钮等功能\n\n+ 复用型写法I\n\n```jsx\nfunction ProductCard({isHot, price, productImage, productUrl}) {\n\n  return (\n    <div style={isHot ? styles.cardWithBg : {}}>\n      {isHot && <Tag />}\n      <span>{price}</span>\n      {isHot && <Button />}\n      <img src={productImage} onClick={() => Navigate.push(productUrl)} />\n    </div>\n  )\n\n}\n```\n\n+ 复用型写法Ⅱ\n```jsx\nfunction CommonProductCard({price, productImage, productUrl}) {\n  return (\n    <div>\n      <Price price={price} />\n      <ProductImage image={productImage} url={productUrl} />\n    </div>\n  )\n}\n\nfunction HotProductCard({price, productImage, productUrl}) {\n  return (\n    <div style={styles.cardWithBg}>\n      <Tag />\n      <Price price={price} />\n      <Button />\n      <ProductImage image={productImage} url={productUrl} />\n    </div>\n  )\n}\n\nfunction Price({price}) {\n  return <span>{price}</span>\n}\n\nfunction ProductImage({image, url}) {\n  return <img src={productImage} onClick={() => Navigate.push(productUrl)} />\n}\n```\n\n复用型I的代码说不上来的别扭，绝对的垃圾代码\n复用型Ⅱ是经常能见到的，看起来解耦非常不错，也容易理解，但是细想：\n热点商品为什么要跟普通商品的UI复用？两者本来就应该长得不一样。现在只是恰巧有某些地方是一样的，后来我说不定就改了。\n\n技术层面复用逻辑没有问题，但是回到需求本身，这种复用是没有必要的，本来这两个东西就应该是分开的。\n所以不如复制粘贴再写一遍更好：\n\n+ 分离型写法\n```jsx\nfunction CommonProductCard({price, productImage, productUrl}) {\n  return (\n    <div>\n      <span>{price}</span>\n      <img src={productImage} onClick={() => Navigate.push(productUrl)} />\n    </div>\n  )\n}\n\nfunction HotProductCard({price, productImage, productUrl}) {\n  return (\n    <div style={styles.cardWithBg}>\n      <Tag />\n      <span>{price}</span>\n      <Button />\n      <img src={productImage} onClick={() => Navigate.push(productUrl)} />\n    </div>\n  )\n}\n```\n\n## 总结\n\n不要盲目的复用代码，即使他们在逻辑上有相同之处，也要看这种逻辑相同是否是需求所期望的，可能只是偶发性的相同。\n","source":"_drafts/tips/不要盲目复用代码.md","raw":"## 引言\n\n开发过程中经常会碰到相同的逻辑，一般为了代码的整洁性，都会进行复用。\n但是是不是所有相同的逻辑都需要复用呢？\n\n## 实际场景\n\n有两个商品卡片需要实现，其中一个是热点商品，一个是普通商品\n两个在长相上有一些区别，大概在30%左右\n热点商品多了标签，背景色，按钮等功能\n\n+ 复用型写法I\n\n```jsx\nfunction ProductCard({isHot, price, productImage, productUrl}) {\n\n  return (\n    <div style={isHot ? styles.cardWithBg : {}}>\n      {isHot && <Tag />}\n      <span>{price}</span>\n      {isHot && <Button />}\n      <img src={productImage} onClick={() => Navigate.push(productUrl)} />\n    </div>\n  )\n\n}\n```\n\n+ 复用型写法Ⅱ\n```jsx\nfunction CommonProductCard({price, productImage, productUrl}) {\n  return (\n    <div>\n      <Price price={price} />\n      <ProductImage image={productImage} url={productUrl} />\n    </div>\n  )\n}\n\nfunction HotProductCard({price, productImage, productUrl}) {\n  return (\n    <div style={styles.cardWithBg}>\n      <Tag />\n      <Price price={price} />\n      <Button />\n      <ProductImage image={productImage} url={productUrl} />\n    </div>\n  )\n}\n\nfunction Price({price}) {\n  return <span>{price}</span>\n}\n\nfunction ProductImage({image, url}) {\n  return <img src={productImage} onClick={() => Navigate.push(productUrl)} />\n}\n```\n\n复用型I的代码说不上来的别扭，绝对的垃圾代码\n复用型Ⅱ是经常能见到的，看起来解耦非常不错，也容易理解，但是细想：\n热点商品为什么要跟普通商品的UI复用？两者本来就应该长得不一样。现在只是恰巧有某些地方是一样的，后来我说不定就改了。\n\n技术层面复用逻辑没有问题，但是回到需求本身，这种复用是没有必要的，本来这两个东西就应该是分开的。\n所以不如复制粘贴再写一遍更好：\n\n+ 分离型写法\n```jsx\nfunction CommonProductCard({price, productImage, productUrl}) {\n  return (\n    <div>\n      <span>{price}</span>\n      <img src={productImage} onClick={() => Navigate.push(productUrl)} />\n    </div>\n  )\n}\n\nfunction HotProductCard({price, productImage, productUrl}) {\n  return (\n    <div style={styles.cardWithBg}>\n      <Tag />\n      <span>{price}</span>\n      <Button />\n      <img src={productImage} onClick={() => Navigate.push(productUrl)} />\n    </div>\n  )\n}\n```\n\n## 总结\n\n不要盲目的复用代码，即使他们在逻辑上有相同之处，也要看这种逻辑相同是否是需求所期望的，可能只是偶发性的相同。\n","slug":"tips/不要盲目复用代码","published":0,"date":"2025-01-23T06:11:55.087Z","updated":"2025-01-23T06:11:55.087Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm6cy9w4b0006k8uie6mx4twy","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>开发过程中经常会碰到相同的逻辑，一般为了代码的整洁性，都会进行复用。<br>但是是不是所有相同的逻辑都需要复用呢？</p>\n<h2 id=\"实际场景\"><a href=\"#实际场景\" class=\"headerlink\" title=\"实际场景\"></a>实际场景</h2><p>有两个商品卡片需要实现，其中一个是热点商品，一个是普通商品<br>两个在长相上有一些区别，大概在30%左右<br>热点商品多了标签，背景色，按钮等功能</p>\n<ul>\n<li>复用型写法I</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ProductCard</span>(<span class=\"params\">&#123;isHot, price, productImage, productUrl&#125;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&#123;isHot</span> ? <span class=\"attr\">styles.cardWithBg</span> <span class=\"attr\">:</span> &#123;&#125;&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;isHot &amp;&amp; <span class=\"tag\">&lt;<span class=\"name\">Tag</span> /&gt;</span>&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;price&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;isHot &amp;&amp; <span class=\"tag\">&lt;<span class=\"name\">Button</span> /&gt;</span>&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&#123;productImage&#125;</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> Navigate.push(productUrl)&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>复用型写法Ⅱ</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">CommonProductCard</span>(<span class=\"params\">&#123;price, productImage, productUrl&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Price</span> <span class=\"attr\">price</span>=<span class=\"string\">&#123;price&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">ProductImage</span> <span class=\"attr\">image</span>=<span class=\"string\">&#123;productImage&#125;</span> <span class=\"attr\">url</span>=<span class=\"string\">&#123;productUrl&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">HotProductCard</span>(<span class=\"params\">&#123;price, productImage, productUrl&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&#123;styles.cardWithBg&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Tag</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Price</span> <span class=\"attr\">price</span>=<span class=\"string\">&#123;price&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Button</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">ProductImage</span> <span class=\"attr\">image</span>=<span class=\"string\">&#123;productImage&#125;</span> <span class=\"attr\">url</span>=<span class=\"string\">&#123;productUrl&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Price</span>(<span class=\"params\">&#123;price&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;price&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ProductImage</span>(<span class=\"params\">&#123;image, url&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&#123;productImage&#125;</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> Navigate.push(productUrl)&#125; /&gt;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>复用型I的代码说不上来的别扭，绝对的垃圾代码<br>复用型Ⅱ是经常能见到的，看起来解耦非常不错，也容易理解，但是细想：<br>热点商品为什么要跟普通商品的UI复用？两者本来就应该长得不一样。现在只是恰巧有某些地方是一样的，后来我说不定就改了。</p>\n<p>技术层面复用逻辑没有问题，但是回到需求本身，这种复用是没有必要的，本来这两个东西就应该是分开的。<br>所以不如复制粘贴再写一遍更好：</p>\n<ul>\n<li>分离型写法</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">CommonProductCard</span>(<span class=\"params\">&#123;price, productImage, productUrl&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;price&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&#123;productImage&#125;</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> Navigate.push(productUrl)&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">HotProductCard</span>(<span class=\"params\">&#123;price, productImage, productUrl&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&#123;styles.cardWithBg&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Tag</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;price&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Button</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&#123;productImage&#125;</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> Navigate.push(productUrl)&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>不要盲目的复用代码，即使他们在逻辑上有相同之处，也要看这种逻辑相同是否是需求所期望的，可能只是偶发性的相同。</p>\n","excerpt":"","more":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>开发过程中经常会碰到相同的逻辑，一般为了代码的整洁性，都会进行复用。<br>但是是不是所有相同的逻辑都需要复用呢？</p>\n<h2 id=\"实际场景\"><a href=\"#实际场景\" class=\"headerlink\" title=\"实际场景\"></a>实际场景</h2><p>有两个商品卡片需要实现，其中一个是热点商品，一个是普通商品<br>两个在长相上有一些区别，大概在30%左右<br>热点商品多了标签，背景色，按钮等功能</p>\n<ul>\n<li>复用型写法I</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ProductCard</span>(<span class=\"params\">&#123;isHot, price, productImage, productUrl&#125;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&#123;isHot</span> ? <span class=\"attr\">styles.cardWithBg</span> <span class=\"attr\">:</span> &#123;&#125;&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;isHot &amp;&amp; <span class=\"tag\">&lt;<span class=\"name\">Tag</span> /&gt;</span>&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;price&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;isHot &amp;&amp; <span class=\"tag\">&lt;<span class=\"name\">Button</span> /&gt;</span>&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&#123;productImage&#125;</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> Navigate.push(productUrl)&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>复用型写法Ⅱ</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">CommonProductCard</span>(<span class=\"params\">&#123;price, productImage, productUrl&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Price</span> <span class=\"attr\">price</span>=<span class=\"string\">&#123;price&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">ProductImage</span> <span class=\"attr\">image</span>=<span class=\"string\">&#123;productImage&#125;</span> <span class=\"attr\">url</span>=<span class=\"string\">&#123;productUrl&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">HotProductCard</span>(<span class=\"params\">&#123;price, productImage, productUrl&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&#123;styles.cardWithBg&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Tag</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Price</span> <span class=\"attr\">price</span>=<span class=\"string\">&#123;price&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Button</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">ProductImage</span> <span class=\"attr\">image</span>=<span class=\"string\">&#123;productImage&#125;</span> <span class=\"attr\">url</span>=<span class=\"string\">&#123;productUrl&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Price</span>(<span class=\"params\">&#123;price&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;price&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ProductImage</span>(<span class=\"params\">&#123;image, url&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&#123;productImage&#125;</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> Navigate.push(productUrl)&#125; /&gt;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>复用型I的代码说不上来的别扭，绝对的垃圾代码<br>复用型Ⅱ是经常能见到的，看起来解耦非常不错，也容易理解，但是细想：<br>热点商品为什么要跟普通商品的UI复用？两者本来就应该长得不一样。现在只是恰巧有某些地方是一样的，后来我说不定就改了。</p>\n<p>技术层面复用逻辑没有问题，但是回到需求本身，这种复用是没有必要的，本来这两个东西就应该是分开的。<br>所以不如复制粘贴再写一遍更好：</p>\n<ul>\n<li>分离型写法</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">CommonProductCard</span>(<span class=\"params\">&#123;price, productImage, productUrl&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;price&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&#123;productImage&#125;</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> Navigate.push(productUrl)&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">HotProductCard</span>(<span class=\"params\">&#123;price, productImage, productUrl&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&#123;styles.cardWithBg&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Tag</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;price&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Button</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&#123;productImage&#125;</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> Navigate.push(productUrl)&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>不要盲目的复用代码，即使他们在逻辑上有相同之处，也要看这种逻辑相同是否是需求所期望的，可能只是偶发性的相同。</p>\n"},{"_content":"## Traditional currency system\n\n1. Role of Central Banks: Central banks issue fiat currency and use tools like interest rate policies to regulate the economy.\n2. Regulation and Compliance: Financial institutions are supervised by government and regulatory bodies to ensure stability and transparency in the financial system.\n3. Credit System: The modern monetary system relies on a credit system, where individuals and businesses obtain loans and credit through banks.\n\nIt is clear that the traditional monetary system is centered around governments and central banks.\n\n## What is de-centralized\nImagine a system, where everyone can earn currency through a certain amount of labor and freely engage in transactions. In the absence of a central organization, individuals cannot deceive others to obtain currency or fabricate transactions, just like being compelled to adhere to the laws of physics.\n\n## How to solve trust problem?\nPoW(Proof of Work).\n## How to drive miner running the server?\nBonus.\n## How to run one app on the blockchain?\nDApp. Introduce ETH.\n## How to speed up the transaction?\nDPoS.\n## How to exchange with other coins?\nWBTC.\n## what is the cryptocurrency exchanges?\n\n","source":"_drafts/BlockChain-notes/Introduction.md","raw":"## Traditional currency system\n\n1. Role of Central Banks: Central banks issue fiat currency and use tools like interest rate policies to regulate the economy.\n2. Regulation and Compliance: Financial institutions are supervised by government and regulatory bodies to ensure stability and transparency in the financial system.\n3. Credit System: The modern monetary system relies on a credit system, where individuals and businesses obtain loans and credit through banks.\n\nIt is clear that the traditional monetary system is centered around governments and central banks.\n\n## What is de-centralized\nImagine a system, where everyone can earn currency through a certain amount of labor and freely engage in transactions. In the absence of a central organization, individuals cannot deceive others to obtain currency or fabricate transactions, just like being compelled to adhere to the laws of physics.\n\n## How to solve trust problem?\nPoW(Proof of Work).\n## How to drive miner running the server?\nBonus.\n## How to run one app on the blockchain?\nDApp. Introduce ETH.\n## How to speed up the transaction?\nDPoS.\n## How to exchange with other coins?\nWBTC.\n## what is the cryptocurrency exchanges?\n\n","slug":"BlockChain-notes/Introduction","published":0,"date":"2025-01-23T08:32:03.327Z","updated":"2025-01-26T01:30:21.379Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm6cy9w4c0007k8uic3sd7gm8","content":"<h2 id=\"Traditional-currency-system\"><a href=\"#Traditional-currency-system\" class=\"headerlink\" title=\"Traditional currency system\"></a>Traditional currency system</h2><ol>\n<li>Role of Central Banks: Central banks issue fiat currency and use tools like interest rate policies to regulate the economy.</li>\n<li>Regulation and Compliance: Financial institutions are supervised by government and regulatory bodies to ensure stability and transparency in the financial system.</li>\n<li>Credit System: The modern monetary system relies on a credit system, where individuals and businesses obtain loans and credit through banks.</li>\n</ol>\n<p>It is clear that the traditional monetary system is centered around governments and central banks.</p>\n<h2 id=\"What-is-de-centralized\"><a href=\"#What-is-de-centralized\" class=\"headerlink\" title=\"What is de-centralized\"></a>What is de-centralized</h2><p>Imagine a system, where everyone can earn currency through a certain amount of labor and freely engage in transactions. In the absence of a central organization, individuals cannot deceive others to obtain currency or fabricate transactions, just like being compelled to adhere to the laws of physics.</p>\n<h2 id=\"How-to-solve-trust-problem\"><a href=\"#How-to-solve-trust-problem\" class=\"headerlink\" title=\"How to solve trust problem?\"></a>How to solve trust problem?</h2><p>PoW(Proof of Work).</p>\n<h2 id=\"How-to-drive-miner-running-the-server\"><a href=\"#How-to-drive-miner-running-the-server\" class=\"headerlink\" title=\"How to drive miner running the server?\"></a>How to drive miner running the server?</h2><p>Bonus.</p>\n<h2 id=\"How-to-run-one-app-on-the-blockchain\"><a href=\"#How-to-run-one-app-on-the-blockchain\" class=\"headerlink\" title=\"How to run one app on the blockchain?\"></a>How to run one app on the blockchain?</h2><p>DApp. Introduce ETH.</p>\n<h2 id=\"How-to-speed-up-the-transaction\"><a href=\"#How-to-speed-up-the-transaction\" class=\"headerlink\" title=\"How to speed up the transaction?\"></a>How to speed up the transaction?</h2><p>DPoS.</p>\n<h2 id=\"How-to-exchange-with-other-coins\"><a href=\"#How-to-exchange-with-other-coins\" class=\"headerlink\" title=\"How to exchange with other coins?\"></a>How to exchange with other coins?</h2><p>WBTC.</p>\n<h2 id=\"what-is-the-cryptocurrency-exchanges\"><a href=\"#what-is-the-cryptocurrency-exchanges\" class=\"headerlink\" title=\"what is the cryptocurrency exchanges?\"></a>what is the cryptocurrency exchanges?</h2>","excerpt":"","more":"<h2 id=\"Traditional-currency-system\"><a href=\"#Traditional-currency-system\" class=\"headerlink\" title=\"Traditional currency system\"></a>Traditional currency system</h2><ol>\n<li>Role of Central Banks: Central banks issue fiat currency and use tools like interest rate policies to regulate the economy.</li>\n<li>Regulation and Compliance: Financial institutions are supervised by government and regulatory bodies to ensure stability and transparency in the financial system.</li>\n<li>Credit System: The modern monetary system relies on a credit system, where individuals and businesses obtain loans and credit through banks.</li>\n</ol>\n<p>It is clear that the traditional monetary system is centered around governments and central banks.</p>\n<h2 id=\"What-is-de-centralized\"><a href=\"#What-is-de-centralized\" class=\"headerlink\" title=\"What is de-centralized\"></a>What is de-centralized</h2><p>Imagine a system, where everyone can earn currency through a certain amount of labor and freely engage in transactions. In the absence of a central organization, individuals cannot deceive others to obtain currency or fabricate transactions, just like being compelled to adhere to the laws of physics.</p>\n<h2 id=\"How-to-solve-trust-problem\"><a href=\"#How-to-solve-trust-problem\" class=\"headerlink\" title=\"How to solve trust problem?\"></a>How to solve trust problem?</h2><p>PoW(Proof of Work).</p>\n<h2 id=\"How-to-drive-miner-running-the-server\"><a href=\"#How-to-drive-miner-running-the-server\" class=\"headerlink\" title=\"How to drive miner running the server?\"></a>How to drive miner running the server?</h2><p>Bonus.</p>\n<h2 id=\"How-to-run-one-app-on-the-blockchain\"><a href=\"#How-to-run-one-app-on-the-blockchain\" class=\"headerlink\" title=\"How to run one app on the blockchain?\"></a>How to run one app on the blockchain?</h2><p>DApp. Introduce ETH.</p>\n<h2 id=\"How-to-speed-up-the-transaction\"><a href=\"#How-to-speed-up-the-transaction\" class=\"headerlink\" title=\"How to speed up the transaction?\"></a>How to speed up the transaction?</h2><p>DPoS.</p>\n<h2 id=\"How-to-exchange-with-other-coins\"><a href=\"#How-to-exchange-with-other-coins\" class=\"headerlink\" title=\"How to exchange with other coins?\"></a>How to exchange with other coins?</h2><p>WBTC.</p>\n<h2 id=\"what-is-the-cryptocurrency-exchanges\"><a href=\"#what-is-the-cryptocurrency-exchanges\" class=\"headerlink\" title=\"what is the cryptocurrency exchanges?\"></a>what is the cryptocurrency exchanges?</h2>"},{"_content":"# Automate ssh login\n\n```sh\n# with ssh key on client\nssh-copy-id id@server\n# input password, done\n\n# /usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/c/Users/sqwwwok/.ssh/id_rsa.pub\"\n# /usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n# /usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\n# root@120.78.2.48's password:\n\n# Number of key(s) added: 1\n\n# Now try logging into the machine, with:   \"ssh 'root@120.78.2.48'\"\n# and check to make sure that only the key(s) you wanted were added.\n```\n\n","source":"_drafts/solutions/Automate ssh login.md","raw":"# Automate ssh login\n\n```sh\n# with ssh key on client\nssh-copy-id id@server\n# input password, done\n\n# /usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/c/Users/sqwwwok/.ssh/id_rsa.pub\"\n# /usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n# /usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\n# root@120.78.2.48's password:\n\n# Number of key(s) added: 1\n\n# Now try logging into the machine, with:   \"ssh 'root@120.78.2.48'\"\n# and check to make sure that only the key(s) you wanted were added.\n```\n\n","slug":"solutions/Automate ssh login","published":0,"date":"2025-01-23T06:11:55.087Z","updated":"2025-01-23T06:11:55.087Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm6cy9w4d0008k8uic5xa4b75","content":"<h1 id=\"Automate-ssh-login\"><a href=\"#Automate-ssh-login\" class=\"headerlink\" title=\"Automate ssh login\"></a>Automate ssh login</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># with ssh key on client</span></span><br><span class=\"line\">ssh-copy-id <span class=\"built_in\">id</span>@server</span><br><span class=\"line\"><span class=\"comment\"># input password, done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># /usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: &quot;/c/Users/sqwwwok/.ssh/id_rsa.pub&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># /usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span></span><br><span class=\"line\"><span class=\"comment\"># /usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span></span><br><span class=\"line\"><span class=\"comment\"># root@120.78.2.48&#x27;s password:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Number of key(s) added: 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Now try logging into the machine, with:   &quot;ssh &#x27;root@120.78.2.48&#x27;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># and check to make sure that only the key(s) you wanted were added.</span></span><br></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<h1 id=\"Automate-ssh-login\"><a href=\"#Automate-ssh-login\" class=\"headerlink\" title=\"Automate ssh login\"></a>Automate ssh login</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># with ssh key on client</span></span><br><span class=\"line\">ssh-copy-id <span class=\"built_in\">id</span>@server</span><br><span class=\"line\"><span class=\"comment\"># input password, done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># /usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: &quot;/c/Users/sqwwwok/.ssh/id_rsa.pub&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># /usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span></span><br><span class=\"line\"><span class=\"comment\"># /usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span></span><br><span class=\"line\"><span class=\"comment\"># root@120.78.2.48&#x27;s password:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Number of key(s) added: 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Now try logging into the machine, with:   &quot;ssh &#x27;root@120.78.2.48&#x27;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># and check to make sure that only the key(s) you wanted were added.</span></span><br></pre></td></tr></table></figure>\n\n"},{"_content":"## Backgrounds\n\n```\n/dir1\n    /dir2 \n       |\n        --- file1\n       |\n        --- file2\n```\n\n Expected:\n\n```\n/dir1\n  --- file1\n\t--- file2\n```\n\n\n\n## Solutions\n\n### Zip and unzip\n\n```shell\ntar -cvf all.tar *\n\n# followed by moving all.tar to a new location then\nmv all.tar /dest/\ncd /dest/\n\n# 4 means the deepth of the directory\ntar -xvf all.tar --strip=4\n```\n\n### find and cp\n\n```shell\nfind . -iname '*.*' -exec cp \\{\\} /dest/ \\;\n```\n\n","source":"_drafts/solutions/Flatten the nested directory.md","raw":"## Backgrounds\n\n```\n/dir1\n    /dir2 \n       |\n        --- file1\n       |\n        --- file2\n```\n\n Expected:\n\n```\n/dir1\n  --- file1\n\t--- file2\n```\n\n\n\n## Solutions\n\n### Zip and unzip\n\n```shell\ntar -cvf all.tar *\n\n# followed by moving all.tar to a new location then\nmv all.tar /dest/\ncd /dest/\n\n# 4 means the deepth of the directory\ntar -xvf all.tar --strip=4\n```\n\n### find and cp\n\n```shell\nfind . -iname '*.*' -exec cp \\{\\} /dest/ \\;\n```\n\n","slug":"solutions/Flatten the nested directory","published":0,"date":"2025-01-23T06:11:55.087Z","updated":"2025-01-23T06:11:55.087Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm6cy9w4d0009k8uid5gue145","content":"<h2 id=\"Backgrounds\"><a href=\"#Backgrounds\" class=\"headerlink\" title=\"Backgrounds\"></a>Backgrounds</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/dir1</span><br><span class=\"line\">    /dir2 </span><br><span class=\"line\">       |</span><br><span class=\"line\">        --- file1</span><br><span class=\"line\">       |</span><br><span class=\"line\">        --- file2</span><br></pre></td></tr></table></figure>\n\n<p> Expected:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/dir1</span><br><span class=\"line\">  --- file1</span><br><span class=\"line\">\t--- file2</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Solutions\"><a href=\"#Solutions\" class=\"headerlink\" title=\"Solutions\"></a>Solutions</h2><h3 id=\"Zip-and-unzip\"><a href=\"#Zip-and-unzip\" class=\"headerlink\" title=\"Zip and unzip\"></a>Zip and unzip</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -cvf all.tar *</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">followed by moving all.tar to a new location <span class=\"keyword\">then</span></span></span><br><span class=\"line\">mv all.tar /dest/</span><br><span class=\"line\">cd /dest/</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">4 means the deepth of the directory</span></span><br><span class=\"line\">tar -xvf all.tar --strip=4</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"find-and-cp\"><a href=\"#find-and-cp\" class=\"headerlink\" title=\"find and cp\"></a>find and cp</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find . -iname &#x27;*.*&#x27; -exec cp \\&#123;\\&#125; /dest/ \\;</span><br></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<h2 id=\"Backgrounds\"><a href=\"#Backgrounds\" class=\"headerlink\" title=\"Backgrounds\"></a>Backgrounds</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/dir1</span><br><span class=\"line\">    /dir2 </span><br><span class=\"line\">       |</span><br><span class=\"line\">        --- file1</span><br><span class=\"line\">       |</span><br><span class=\"line\">        --- file2</span><br></pre></td></tr></table></figure>\n\n<p> Expected:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/dir1</span><br><span class=\"line\">  --- file1</span><br><span class=\"line\">\t--- file2</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Solutions\"><a href=\"#Solutions\" class=\"headerlink\" title=\"Solutions\"></a>Solutions</h2><h3 id=\"Zip-and-unzip\"><a href=\"#Zip-and-unzip\" class=\"headerlink\" title=\"Zip and unzip\"></a>Zip and unzip</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -cvf all.tar *</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">followed by moving all.tar to a new location <span class=\"keyword\">then</span></span></span><br><span class=\"line\">mv all.tar /dest/</span><br><span class=\"line\">cd /dest/</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">4 means the deepth of the directory</span></span><br><span class=\"line\">tar -xvf all.tar --strip=4</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"find-and-cp\"><a href=\"#find-and-cp\" class=\"headerlink\" title=\"find and cp\"></a>find and cp</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find . -iname &#x27;*.*&#x27; -exec cp \\&#123;\\&#125; /dest/ \\;</span><br></pre></td></tr></table></figure>\n\n"},{"_content":"(Stackoverflow)[https://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories-on-rebase]\n\n### Backgrounds\n本地和远程仓库的主分支不同（master main）,导致新建远程仓库后拉取合并到本地会报错。\n```sh\ngit merge master\n# fatal: refusing to merge unrelated histories\n```\n\n### Solution\n```sh\ngit merge master --allow-unrelated-histories\n```\n\n","source":"_drafts/solutions/Merge unrelated branches.md","raw":"(Stackoverflow)[https://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories-on-rebase]\n\n### Backgrounds\n本地和远程仓库的主分支不同（master main）,导致新建远程仓库后拉取合并到本地会报错。\n```sh\ngit merge master\n# fatal: refusing to merge unrelated histories\n```\n\n### Solution\n```sh\ngit merge master --allow-unrelated-histories\n```\n\n","slug":"solutions/Merge unrelated branches","published":0,"date":"2025-01-23T06:11:55.087Z","updated":"2025-01-23T06:11:55.087Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm6cy9w4e000ak8ui2dg0azdj","content":"<p>(Stackoverflow)[<a href=\"https://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories-on-rebase]\">https://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories-on-rebase]</a></p>\n<h3 id=\"Backgrounds\"><a href=\"#Backgrounds\" class=\"headerlink\" title=\"Backgrounds\"></a>Backgrounds</h3><p>本地和远程仓库的主分支不同（master main）,导致新建远程仓库后拉取合并到本地会报错。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge master</span><br><span class=\"line\"><span class=\"comment\"># fatal: refusing to merge unrelated histories</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge master --allow-unrelated-histories</span><br></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<p>(Stackoverflow)[<a href=\"https://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories-on-rebase]\">https://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories-on-rebase]</a></p>\n<h3 id=\"Backgrounds\"><a href=\"#Backgrounds\" class=\"headerlink\" title=\"Backgrounds\"></a>Backgrounds</h3><p>本地和远程仓库的主分支不同（master main）,导致新建远程仓库后拉取合并到本地会报错。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge master</span><br><span class=\"line\"><span class=\"comment\"># fatal: refusing to merge unrelated histories</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge master --allow-unrelated-histories</span><br></pre></td></tr></table></figure>\n\n"},{"_content":"In React Native, logical AND may cause crash as below.\n\n[Conditional rendering in React Native may crash your app](https://www.koprowski.it/blog/conditional-rendering-react-native-text-crash/)\n\nThis babel plugin [here](https://gist.github.com/bogas04/d27ec339ff48758525bb4ca3136367cb) can replace all logical AND with ternary operators, with a little more configuration.\n\n```jsx\n// .babelrc.js\nmodule.exports = function (api) {\n    api.cache(true);\n\n    const presets = [];\n    const plugins = [\n        './ternary-jsx.js',\n// this two plugins below only parse but not transform code\n        ['@babel/plugin-syntax-decorators', { decoratorsBeforeExport: true }],\n        ['@babel/plugin-syntax-class-properties', { loose: true }],\n    ];\n\n    return {\n        parserOpts: {\n            plugins: ['jsx', 'typescript'],\n        },\n        presets,\n        plugins,\n        generatorOpts: {\n            retainLines: true,\n            compact: false,\n            minified: false,\n            concise: false,\n        },\n    };\n};\n```\n\n[However, Babel will lose some code formatting in the process, as it works based on the AST.](https://stackoverflow.com/questions/77531610/how-to-prevent-babel-from-formatting-the-generated-code).\n\n\n","source":"_drafts/solutions/Replace logical AND with ternary operator.md","raw":"In React Native, logical AND may cause crash as below.\n\n[Conditional rendering in React Native may crash your app](https://www.koprowski.it/blog/conditional-rendering-react-native-text-crash/)\n\nThis babel plugin [here](https://gist.github.com/bogas04/d27ec339ff48758525bb4ca3136367cb) can replace all logical AND with ternary operators, with a little more configuration.\n\n```jsx\n// .babelrc.js\nmodule.exports = function (api) {\n    api.cache(true);\n\n    const presets = [];\n    const plugins = [\n        './ternary-jsx.js',\n// this two plugins below only parse but not transform code\n        ['@babel/plugin-syntax-decorators', { decoratorsBeforeExport: true }],\n        ['@babel/plugin-syntax-class-properties', { loose: true }],\n    ];\n\n    return {\n        parserOpts: {\n            plugins: ['jsx', 'typescript'],\n        },\n        presets,\n        plugins,\n        generatorOpts: {\n            retainLines: true,\n            compact: false,\n            minified: false,\n            concise: false,\n        },\n    };\n};\n```\n\n[However, Babel will lose some code formatting in the process, as it works based on the AST.](https://stackoverflow.com/questions/77531610/how-to-prevent-babel-from-formatting-the-generated-code).\n\n\n","slug":"solutions/Replace logical AND with ternary operator","published":0,"date":"2025-01-23T06:26:49.077Z","updated":"2025-01-23T06:26:49.077Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm6cy9w4e000bk8uiak0q366h","content":"<p>In React Native, logical AND may cause crash as below.</p>\n<p><a href=\"https://www.koprowski.it/blog/conditional-rendering-react-native-text-crash/\">Conditional rendering in React Native may crash your app</a></p>\n<p>This babel plugin <a href=\"https://gist.github.com/bogas04/d27ec339ff48758525bb4ca3136367cb\">here</a> can replace all logical AND with ternary operators, with a little more configuration.</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// .babelrc.js</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span> (<span class=\"params\">api</span>) &#123;</span><br><span class=\"line\">    api.<span class=\"title function_\">cache</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> presets = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> plugins = [</span><br><span class=\"line\">        <span class=\"string\">&#x27;./ternary-jsx.js&#x27;</span>,</span><br><span class=\"line\"><span class=\"comment\">// this two plugins below only parse but not transform code</span></span><br><span class=\"line\">        [<span class=\"string\">&#x27;@babel/plugin-syntax-decorators&#x27;</span>, &#123; <span class=\"attr\">decoratorsBeforeExport</span>: <span class=\"literal\">true</span> &#125;],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;@babel/plugin-syntax-class-properties&#x27;</span>, &#123; <span class=\"attr\">loose</span>: <span class=\"literal\">true</span> &#125;],</span><br><span class=\"line\">    ];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">parserOpts</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">plugins</span>: [<span class=\"string\">&#x27;jsx&#x27;</span>, <span class=\"string\">&#x27;typescript&#x27;</span>],</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        presets,</span><br><span class=\"line\">        plugins,</span><br><span class=\"line\">        <span class=\"attr\">generatorOpts</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">retainLines</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">compact</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">minified</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">concise</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://stackoverflow.com/questions/77531610/how-to-prevent-babel-from-formatting-the-generated-code\">However, Babel will lose some code formatting in the process, as it works based on the AST.</a>.</p>\n","excerpt":"","more":"<p>In React Native, logical AND may cause crash as below.</p>\n<p><a href=\"https://www.koprowski.it/blog/conditional-rendering-react-native-text-crash/\">Conditional rendering in React Native may crash your app</a></p>\n<p>This babel plugin <a href=\"https://gist.github.com/bogas04/d27ec339ff48758525bb4ca3136367cb\">here</a> can replace all logical AND with ternary operators, with a little more configuration.</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// .babelrc.js</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span> (<span class=\"params\">api</span>) &#123;</span><br><span class=\"line\">    api.<span class=\"title function_\">cache</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> presets = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> plugins = [</span><br><span class=\"line\">        <span class=\"string\">&#x27;./ternary-jsx.js&#x27;</span>,</span><br><span class=\"line\"><span class=\"comment\">// this two plugins below only parse but not transform code</span></span><br><span class=\"line\">        [<span class=\"string\">&#x27;@babel/plugin-syntax-decorators&#x27;</span>, &#123; <span class=\"attr\">decoratorsBeforeExport</span>: <span class=\"literal\">true</span> &#125;],</span><br><span class=\"line\">        [<span class=\"string\">&#x27;@babel/plugin-syntax-class-properties&#x27;</span>, &#123; <span class=\"attr\">loose</span>: <span class=\"literal\">true</span> &#125;],</span><br><span class=\"line\">    ];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">parserOpts</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">plugins</span>: [<span class=\"string\">&#x27;jsx&#x27;</span>, <span class=\"string\">&#x27;typescript&#x27;</span>],</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        presets,</span><br><span class=\"line\">        plugins,</span><br><span class=\"line\">        <span class=\"attr\">generatorOpts</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">retainLines</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">compact</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">minified</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">concise</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://stackoverflow.com/questions/77531610/how-to-prevent-babel-from-formatting-the-generated-code\">However, Babel will lose some code formatting in the process, as it works based on the AST.</a>.</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}